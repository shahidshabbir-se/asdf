name: Docker-Hostinger-Deployment
on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t my-app .

      - name: Save Docker image as a tarball
        run: docker save my-app | gzip > my-app.tar.gz

      - name: Upload Docker image to Hostinger
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOSTINGER_IP }}
          username: abubakar
          key: ${{ secrets.HOSTINGER_SSH_KEY }}
          source: my-app.tar.gz
          target: /home/abubakar/

      - name: SSH into Hostinger and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOSTINGER_IP }}
          username: abubakar
          key: ${{ secrets.HOSTINGER_SSH_KEY }}
          script: |
            # Check if the tarball already exists and remove it if needed
            if [ -f /home/abubakar/my-app.tar.gz ]; then
              echo "Found existing tarball, removing it..."
              rm /home/abubakar/my-app.tar.gz
            fi
            if [ -f /home/abubakar/my-app.tar ]; then
              echo "Found existing tar file, removing it..."
              rm /home/abubakar/my-app.tar
            fi

            # Decompress and load the Docker image
            gunzip /home/abubakar/my-app.tar.gz
            docker load < /home/abubakar/my-app.tar

            # Stop and remove any running container with the same name
            docker rm -f my-app || true

            # Run the Docker container
            docker run -d -p 4173:4173 --name my-app my-app
